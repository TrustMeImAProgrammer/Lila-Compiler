
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E2D475F3BCA71F0DBC8082AA747048E6'
    
_lr_action_items = {'REAL':([0,6,7,9,10,11,14,16,17,22,23,24,25,26,29,30,31,32,33,34,35,37,38,43,45,46,49,50,51,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,92,93,94,97,98,100,101,104,105,106,],[1,-6,-9,-2,-8,1,-4,-7,-5,-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-16,-3,-12,-13,-51,-52,-53,1,1,1,-10,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,1,1,-15,-20,-19,1,1,-14,1,1,-18,1,-17,]),'RETURN':([0,6,7,9,10,11,14,16,17,22,23,24,25,26,29,30,31,32,33,34,35,37,38,43,45,46,49,50,51,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,92,93,94,98,100,101,104,105,106,],[2,-6,-9,-2,-8,2,-4,-7,-5,-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-16,-3,-12,-13,-51,-52,-53,2,2,-10,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,2,2,-15,-20,-19,2,-14,2,2,-18,2,-17,]),'ISEQUALS':([22,23,24,25,26,29,30,31,32,33,34,35,37,38,40,41,42,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,55,-29,55,-29,-51,-52,55,55,-39,-41,-50,55,-43,-48,-42,-44,-47,-46,-49,-40,55,-15,55,-14,55,]),'NUMBER':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'CHAR':([0,6,7,9,10,11,14,16,17,22,23,24,25,26,29,30,31,32,33,34,35,37,38,43,45,46,49,50,51,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,92,93,94,97,98,100,101,104,105,106,],[18,-6,-9,-2,-8,18,-4,-7,-5,-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-16,-3,-12,-13,-51,-52,-53,18,18,18,-10,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,18,18,-15,-20,-19,18,18,-14,18,18,-18,18,-17,]),'WHILE':([0,6,7,9,10,11,14,16,17,22,23,24,25,26,29,30,31,32,33,34,35,37,38,43,45,46,49,50,51,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,92,93,94,98,100,101,104,105,106,],[4,-6,-9,-2,-8,4,-4,-7,-5,-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-16,-3,-12,-13,-51,-52,-53,4,4,-10,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,4,4,-15,-20,-19,4,-14,4,4,-18,4,-17,]),'TRUE':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'MINUS':([2,4,5,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,99,103,],[27,27,27,-34,-30,-32,-26,-37,27,27,-35,-29,-28,-33,-27,-38,-36,27,-31,57,-29,57,-29,27,-51,-52,57,27,27,27,27,27,27,27,27,27,27,27,27,27,57,27,57,57,-50,57,57,-48,57,57,-47,-46,-49,57,57,-15,57,-14,27,57,]),'DIVIDE':([22,23,24,25,26,29,30,31,32,33,34,35,37,38,40,41,42,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,54,-29,54,-29,54,54,54,54,54,54,-50,54,54,54,54,54,54,-46,-49,54,54,-15,54,-14,54,]),'LE':([22,23,24,25,26,29,30,31,32,33,34,35,37,38,40,41,42,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,59,-29,59,-29,-51,-52,59,59,59,-41,-50,59,-43,-48,-42,-44,-47,-46,-49,59,59,-15,59,-14,59,]),'RPAREN':([22,23,24,25,26,29,30,31,32,33,34,35,37,49,50,51,67,69,70,71,72,73,74,75,76,77,78,79,80,81,86,88,89,90,91,95,98,102,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-51,-52,-53,85,90,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-21,96,98,-15,-24,-23,-14,-22,-25,]),'LT':([22,23,24,25,26,29,30,31,32,33,34,35,37,38,40,41,42,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,58,-29,58,-29,-51,-52,58,58,58,-41,-50,58,-43,-48,-42,-44,-47,-46,-49,58,58,-15,58,-14,58,]),'PLUS':([2,4,5,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,99,103,],[28,28,28,-34,-30,-32,-26,-37,28,28,-35,-29,-28,-33,-27,-38,-36,28,-31,60,-29,60,-29,28,-51,-52,60,28,28,28,28,28,28,28,28,28,28,28,28,28,60,28,60,60,-50,60,60,-48,60,60,-47,-46,-49,60,60,-15,60,-14,28,60,]),'SLITERAL':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'COMMA':([22,23,24,25,26,29,30,31,32,33,34,35,37,49,50,51,70,71,72,73,74,75,76,77,78,79,80,81,86,88,89,90,91,95,98,102,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-51,-52,-53,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-21,97,99,-15,-24,-23,-14,-22,-25,]),'$end':([6,7,8,9,10,11,14,16,17,22,23,24,25,26,29,30,31,32,33,34,35,37,38,43,45,46,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,90,92,93,98,104,106,],[-6,-9,0,-2,-8,-1,-4,-7,-5,-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-16,-3,-12,-13,-51,-52,-53,-10,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,-15,-20,-19,-14,-18,-17,]),'FUNCTION':([0,6,7,9,10,11,14,16,17,22,23,24,25,26,29,30,31,32,33,34,35,37,38,43,45,46,49,50,51,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,92,93,94,98,100,101,104,105,106,],[12,-6,-9,-2,-8,12,-4,-7,-5,-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-16,-3,-12,-13,-51,-52,-53,12,12,-10,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,12,12,-15,-20,-19,12,-14,12,12,-18,12,-17,]),'GT':([22,23,24,25,26,29,30,31,32,33,34,35,37,38,40,41,42,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,53,-29,53,-29,-51,-52,53,53,53,-41,-50,53,-43,-48,-42,-44,-47,-46,-49,53,53,-15,53,-14,53,]),'MODULO':([22,23,24,25,26,29,30,31,32,33,34,35,37,38,40,41,42,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,61,-29,61,-29,61,61,61,61,61,61,-50,61,61,61,61,61,61,-46,-49,61,61,-15,61,-14,61,]),'STRING':([0,6,7,9,10,11,14,16,17,22,23,24,25,26,29,30,31,32,33,34,35,37,38,43,45,46,49,50,51,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,92,93,94,97,98,100,101,104,105,106,],[13,-6,-9,-2,-8,13,-4,-7,-5,-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-16,-3,-12,-13,-51,-52,-53,13,13,13,-10,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,13,13,-15,-20,-19,13,13,-14,13,13,-18,13,-17,]),'PLUSPLUS':([15,],[45,]),'EQUALS':([15,39,],[47,64,]),'TIMES':([22,23,24,25,26,29,30,31,32,33,34,35,37,38,40,41,42,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,62,-29,62,-29,62,62,62,62,62,62,-50,62,62,62,62,62,62,-46,-49,62,62,-15,62,-14,62,]),'GE':([22,23,24,25,26,29,30,31,32,33,34,35,37,38,40,41,42,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,56,-29,56,-29,-51,-52,56,56,56,-41,-50,56,-43,-48,-42,-44,-47,-46,-49,56,56,-15,56,-14,56,]),'LPAREN':([32,44,48,],[-33,67,69,]),'MINUSMINUS':([15,],[46,]),'ID':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,90,92,93,94,98,99,100,101,104,105,106,],[15,-56,32,39,32,32,-6,-9,-2,-8,15,44,-55,-4,-7,-5,-58,-54,-57,32,-34,-30,-32,-26,-37,32,32,-35,-29,-28,-33,-27,-38,-36,32,-31,-16,-3,-12,-13,32,-51,-52,-53,32,32,32,32,32,32,32,32,32,32,32,32,32,15,15,-10,32,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,15,15,95,-15,-20,-19,15,-14,32,15,15,-18,15,-17,]),'IF':([0,6,7,9,10,11,14,16,17,22,23,24,25,26,29,30,31,32,33,34,35,37,38,43,45,46,49,50,51,65,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,92,93,94,98,100,101,104,105,106,],[5,-6,-9,-2,-8,5,-4,-7,-5,-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-16,-3,-12,-13,-51,-52,-53,5,5,-10,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,5,5,-15,-20,-19,5,-14,5,5,-18,5,-17,]),'AND':([22,23,24,25,26,29,30,31,32,33,34,35,37,38,40,41,42,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,52,-29,52,-29,-51,-52,52,52,-39,-41,-50,52,-43,-48,-42,-44,-47,-46,-49,52,52,-15,52,-14,52,]),'LBRACKET':([22,23,24,25,26,29,30,31,32,33,34,35,37,40,42,49,50,51,70,71,72,73,74,75,76,77,78,79,80,81,85,90,96,98,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,65,66,-51,-52,-53,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,94,-15,101,-14,]),'FALSE':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'INT':([0,6,7,9,10,11,14,16,17,22,23,24,25,26,29,30,31,32,33,34,35,37,38,43,45,46,49,50,51,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,92,93,94,97,98,100,101,104,105,106,],[19,-6,-9,-2,-8,19,-4,-7,-5,-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-16,-3,-12,-13,-51,-52,-53,19,19,19,-10,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,19,19,-15,-20,-19,19,19,-14,19,19,-18,19,-17,]),'FLOAT':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'BOOLEAN':([0,6,7,9,10,11,14,16,17,22,23,24,25,26,29,30,31,32,33,34,35,37,38,43,45,46,49,50,51,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,92,93,94,97,98,100,101,104,105,106,],[20,-6,-9,-2,-8,20,-4,-7,-5,-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-16,-3,-12,-13,-51,-52,-53,20,20,20,-10,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,20,20,-15,-20,-19,20,20,-14,20,20,-18,20,-17,]),'CALL':([0,2,4,5,6,7,9,10,11,14,16,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,92,93,94,98,99,100,101,104,105,106,],[21,21,21,21,-6,-9,-2,-8,21,-4,-7,-5,-34,-30,-32,-26,-37,21,21,-35,-29,-28,-33,-27,-38,-36,21,-31,-16,-3,-12,-13,21,-51,-52,-53,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-10,21,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,21,21,-15,-20,-19,21,-14,21,21,21,-18,21,-17,]),'NOT':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'RBRACKET':([6,7,9,10,14,16,17,22,23,24,25,26,29,30,31,32,33,34,35,37,38,43,45,46,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,92,93,98,100,104,105,106,],[-6,-9,-2,-8,-4,-7,-5,-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,-16,-3,-12,-13,-51,-52,-53,-10,-39,-41,-50,-45,-43,-48,-42,-44,-47,-46,-49,-40,-11,92,93,-15,-20,-19,-14,104,-18,106,-17,]),'OR':([22,23,24,25,26,29,30,31,32,33,34,35,37,38,40,41,42,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,98,103,],[-34,-30,-32,-26,-37,-35,-29,-28,-33,-27,-38,-36,-31,63,-29,63,-29,-51,-52,63,63,-39,-41,-50,63,-43,-48,-42,-44,-47,-46,-49,-40,63,-15,63,-14,63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func_call':([0,2,4,5,11,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,83,84,94,99,100,101,105,],[17,33,33,33,17,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,17,17,33,17,17,17,33,17,17,17,]),'identifier':([2,4,5,21,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[37,37,37,48,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'constant':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'assignment':([0,11,65,66,83,84,94,100,101,105,],[14,14,14,14,14,14,14,14,14,14,]),'binary_op':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[30,40,42,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'type_info':([0,11,65,66,67,83,84,94,97,100,101,105,],[3,3,3,3,87,3,3,3,87,3,3,3,]),'return_statement':([0,11,65,66,83,84,94,100,101,105,],[6,6,6,6,6,6,6,6,6,6,]),'arguments_list':([69,],[89,]),'while_statement':([0,11,65,66,83,84,94,100,101,105,],[7,7,7,7,7,7,7,7,7,7,]),'program':([0,],[8,]),'unary_op':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'statement':([0,11,65,66,83,84,94,100,101,105,],[9,43,9,9,43,43,9,43,9,43,]),'atom':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'parameter_declaration':([67,97,],[86,102,]),'simple_expression':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'if_statement':([0,11,65,66,83,84,94,100,101,105,],[10,10,10,10,10,10,10,10,10,10,]),'expression':([2,4,5,27,28,36,47,52,53,54,55,56,57,58,59,60,61,62,63,64,69,99,],[38,41,41,49,50,51,68,70,71,72,73,74,75,76,77,78,79,80,81,82,91,103,]),'params_list':([67,],[88,]),'translation_unit':([0,65,66,94,101,],[11,83,84,100,105,]),'func_declaration':([0,11,65,66,83,84,94,100,101,105,],[16,16,16,16,16,16,16,16,16,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> translation_unit','program',1,'p_program','parser.py',15),
  ('translation_unit -> statement','translation_unit',1,'p_translation_unit','parser.py',19),
  ('translation_unit -> translation_unit statement','translation_unit',2,'p_translation_unit','parser.py',20),
  ('statement -> assignment','statement',1,'p_statement','parser.py',34),
  ('statement -> func_call','statement',1,'p_statement','parser.py',35),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> func_declaration','statement',1,'p_statement','parser.py',37),
  ('statement -> if_statement','statement',1,'p_statement_block','parser.py',42),
  ('statement -> while_statement','statement',1,'p_statement_block','parser.py',43),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment','parser.py',48),
  ('assignment -> type_info ID EQUALS expression','assignment',4,'p_assignment_declaration','parser.py',53),
  ('assignment -> ID PLUSPLUS','assignment',2,'p_assignment_increment','parser.py',58),
  ('assignment -> ID MINUSMINUS','assignment',2,'p_assignment_decrement','parser.py',62),
  ('func_call -> CALL identifier LPAREN arguments_list RPAREN','func_call',5,'p_func_call','parser.py',66),
  ('func_call -> CALL identifier LPAREN RPAREN','func_call',4,'p_func_call','parser.py',67),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',74),
  ('func_declaration -> FUNCTION ID LPAREN params_list RPAREN LBRACKET translation_unit RBRACKET','func_declaration',8,'p_func_declaration','parser.py',80),
  ('func_declaration -> FUNCTION ID LPAREN RPAREN LBRACKET translation_unit RBRACKET','func_declaration',7,'p_func_declaration','parser.py',81),
  ('if_statement -> IF binary_op LBRACKET translation_unit RBRACKET','if_statement',5,'p_if_statement','parser.py',89),
  ('while_statement -> WHILE binary_op LBRACKET translation_unit RBRACKET','while_statement',5,'p_while_statement','parser.py',93),
  ('params_list -> parameter_declaration','params_list',1,'p_params_list','parser.py',104),
  ('params_list -> params_list COMMA parameter_declaration','params_list',3,'p_params_list','parser.py',105),
  ('parameter_declaration -> type_info ID','parameter_declaration',2,'p_parameter_declaration','parser.py',113),
  ('arguments_list -> expression','arguments_list',1,'p_arguments_list','parser.py',117),
  ('arguments_list -> arguments_list COMMA expression','arguments_list',3,'p_arguments_list','parser.py',118),
  ('expression -> simple_expression','expression',1,'p_expression','parser.py',130),
  ('expression -> func_call','expression',1,'p_expression','parser.py',131),
  ('expression -> atom','expression',1,'p_expression','parser.py',132),
  ('simple_expression -> binary_op','simple_expression',1,'p_simple_expression','parser.py',137),
  ('simple_expression -> unary_op','simple_expression',1,'p_simple_expression','parser.py',138),
  ('atom -> identifier','atom',1,'p_atom_expression_','parser.py',144),
  ('atom -> constant','atom',1,'p_atom_expression_','parser.py',145),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',150),
  ('constant -> NUMBER','constant',1,'p_constant','parser.py',154),
  ('constant -> SLITERAL','constant',1,'p_constant','parser.py',155),
  ('constant -> FLOAT','constant',1,'p_constant','parser.py',156),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',157),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',158),
  ('binary_op -> expression AND expression','binary_op',3,'p_binary_op_and','parser.py',164),
  ('binary_op -> expression OR expression','binary_op',3,'p_binary_op_or','parser.py',168),
  ('binary_op -> expression GT expression','binary_op',3,'p_binary_op_gt','parser.py',172),
  ('binary_op -> expression LT expression','binary_op',3,'p_binary_op_lt','parser.py',176),
  ('binary_op -> expression GE expression','binary_op',3,'p_binary_op_ge','parser.py',180),
  ('binary_op -> expression LE expression','binary_op',3,'p_binary_op_le','parser.py',184),
  ('binary_op -> expression ISEQUALS expression','binary_op',3,'p_binary_op_equals','parser.py',188),
  ('binary_op -> expression MODULO expression','binary_op',3,'p_binary_op_mod','parser.py',194),
  ('binary_op -> expression PLUS expression','binary_op',3,'p_binary_op_plus','parser.py',198),
  ('binary_op -> expression MINUS expression','binary_op',3,'p_binary_op_minus','parser.py',202),
  ('binary_op -> expression TIMES expression','binary_op',3,'p_binary_op_times','parser.py',206),
  ('binary_op -> expression DIVIDE expression','binary_op',3,'p_binary_op_divide','parser.py',210),
  ('unary_op -> MINUS expression','unary_op',2,'p_unary_op_minus','parser.py',216),
  ('unary_op -> PLUS expression','unary_op',2,'p_unary_op_plus','parser.py',220),
  ('unary_op -> NOT expression','unary_op',2,'p_unary_op_not','parser.py',224),
  ('type_info -> INT','type_info',1,'p_type_info','parser.py',228),
  ('type_info -> STRING','type_info',1,'p_type_info','parser.py',229),
  ('type_info -> REAL','type_info',1,'p_type_info','parser.py',230),
  ('type_info -> BOOLEAN','type_info',1,'p_type_info','parser.py',231),
  ('type_info -> CHAR','type_info',1,'p_type_info','parser.py',232),
]
