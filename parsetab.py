
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6EDD0C08C59D9D99913750C73E2EE8A4'
    
_lr_action_items = {'REAL':([0,2,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,57,58,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,107,108,110,117,118,120,121,122,123,124,],[1,1,-6,-9,-2,-8,1,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,1,-59,1,1,-11,-12,1,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,1,-27,-26,-17,-13,-25,-23,1,-16,1,1,1,1,1,-19,1,-18,]),'RETURN':([0,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,57,58,71,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,108,118,120,121,122,123,124,],[6,-6,-9,-2,-8,6,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,6,-59,6,-11,-12,6,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,6,-27,-26,-17,-13,-25,-23,-16,6,6,6,-19,6,-18,]),'FLOATNUMBER':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,76,109,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'VOID':([110,117,],[114,114,]),'ISEQUALS':([28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-36,-35,-45,-39,-38,63,-36,-36,63,-58,63,63,63,-46,-48,-53,-57,63,-49,-55,-50,-51,-54,-56,-47,-17,63,-16,63,]),'NUMBER':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,76,109,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'CHAR':([0,2,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,57,58,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,107,108,110,117,118,120,121,122,123,124,],[21,21,-6,-9,-2,-8,21,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,21,-59,21,21,-11,-12,21,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,21,-27,-26,-17,-13,-25,-23,21,-16,21,21,21,21,21,-19,21,-18,]),'WHILE':([0,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,57,58,71,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,108,118,120,121,122,123,124,],[4,-6,-9,-2,-8,4,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,4,-59,4,-11,-12,4,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,4,-27,-26,-17,-13,-25,-23,-16,4,4,4,-19,4,-18,]),'COLON':([92,106,],[104,111,]),'CONST':([0,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,57,58,71,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,108,118,120,121,122,123,124,],[2,-6,-9,-2,-8,2,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,2,-59,2,-11,-12,2,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,2,-27,-26,-17,-13,-25,-23,-16,2,2,2,-19,2,-18,]),'TRUE':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,76,109,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'MINUS':([4,5,6,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,109,113,],[34,34,34,-40,-43,-41,-37,-33,-44,34,-42,-34,-36,-35,-45,-39,34,-38,65,-36,-36,65,34,34,-58,65,34,34,34,34,34,34,34,34,34,34,34,34,34,65,65,65,65,-53,-57,65,65,-55,65,65,-54,-56,65,-17,65,-16,34,65,]),'DIVIDE':([28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-36,-35,-45,-39,-38,62,-36,-36,62,-58,62,62,62,62,62,-53,-57,62,62,62,62,62,62,-56,62,-17,62,-16,62,]),'LE':([28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-36,-35,-45,-39,-38,67,-36,-36,67,-58,67,67,67,67,-48,-53,-57,67,-49,-55,-50,-51,-54,-56,67,-17,67,-16,67,]),'RPAREN':([28,29,30,31,32,33,35,36,38,39,40,42,45,56,58,72,74,79,80,81,82,83,84,85,86,87,88,89,90,93,95,98,99,100,105,108,112,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-58,-59,92,99,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,-28,106,108,-17,-31,-30,-16,-29,-32,]),'LT':([28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-36,-35,-45,-39,-38,64,-36,-36,64,-58,64,64,64,64,-48,-53,-57,64,-49,-55,-50,-51,-54,-56,64,-17,64,-16,64,]),'PLUS':([28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-36,-35,-45,-39,-38,68,-36,-36,68,-58,68,68,68,68,68,-53,-57,68,68,-55,68,68,-54,-56,68,-17,68,-16,68,]),'SLITERAL':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,76,109,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'COMMA':([28,29,30,31,32,33,35,36,38,39,40,42,45,56,58,79,80,81,82,83,84,85,86,87,88,89,90,93,95,98,99,100,105,108,112,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-58,-59,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,-28,107,109,-17,-31,-30,-16,-29,-32,]),'$end':([7,8,9,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,96,97,99,101,102,103,108,122,124,],[-6,-9,0,-2,-8,-1,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,-59,-11,-12,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,-27,-26,-17,-13,-25,-23,-16,-19,-18,]),'FUNCTION':([0,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,57,58,71,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,108,118,120,121,122,123,124,],[13,-6,-9,-2,-8,13,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,13,-59,13,-11,-12,13,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,13,-27,-26,-17,-13,-25,-23,-16,13,13,13,-19,13,-18,]),'GT':([28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-36,-35,-45,-39,-38,60,-36,-36,60,-58,60,60,60,60,-48,-53,-57,60,-49,-55,-50,-51,-54,-56,60,-17,60,-16,60,]),'MODULO':([28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-36,-35,-45,-39,-38,61,-36,-36,61,-58,61,61,61,61,61,-53,-57,61,61,61,61,61,61,-56,61,-17,61,-16,61,]),'STRING':([0,2,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,57,58,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,107,108,110,117,118,120,121,122,123,124,],[15,15,-6,-9,-2,-8,15,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,15,-59,15,15,-11,-12,15,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,15,-27,-26,-17,-13,-25,-23,15,-16,15,15,15,15,15,-19,15,-18,]),'FOR':([0,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,57,58,71,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,108,118,120,121,122,123,124,],[16,-6,-9,-2,-8,16,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,16,-59,16,-11,-12,16,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,16,-27,-26,-17,-13,-25,-23,-16,16,16,16,-19,16,-18,]),'PLUSPLUS':([18,],[50,]),'EQUALS':([18,25,27,28,54,],[-40,53,55,-40,76,]),'TIMES':([28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-36,-35,-45,-39,-38,69,-36,-36,69,-58,69,69,69,69,69,-53,-57,69,69,69,69,69,69,-56,69,-17,69,-16,69,]),'GE':([28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-36,-35,-45,-39,-38,66,-36,-36,66,-58,66,66,66,66,-48,-53,-57,66,-49,-55,-50,-51,-54,-56,66,-17,66,-16,66,]),'LPAREN':([28,48,52,],[-40,72,74,]),'IN':([49,],[73,]),'MINUSMINUS':([18,],[51,]),'ID':([0,1,3,4,5,6,7,8,10,11,12,13,14,15,16,17,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,45,46,47,50,51,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,99,101,102,103,108,109,118,120,121,122,123,124,],[18,-62,28,28,28,28,-6,-9,-2,-8,18,28,-10,-61,49,-4,-7,-5,-64,-60,-63,28,28,-40,-43,-41,-37,-33,-44,28,-42,-34,-35,-45,-39,28,-38,-36,-22,-3,-14,-15,28,28,-58,18,-59,28,28,28,28,28,28,28,28,28,28,28,28,18,97,28,-11,-12,18,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,18,28,-27,-26,-17,-13,-25,-23,-16,28,18,18,18,-19,18,-18,]),'IF':([0,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,57,58,71,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,108,118,120,121,122,123,124,],[5,-6,-9,-2,-8,5,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,5,-59,5,-11,-12,5,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,5,-27,-26,-17,-13,-25,-23,-16,5,5,5,-19,5,-18,]),'AND':([28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-36,-35,-45,-39,-38,59,-36,-36,59,-58,59,59,59,-46,-48,-53,-57,59,-49,-55,-50,-51,-54,-56,59,-17,59,-16,59,]),'LBRACKET':([1,15,21,22,23,28,29,30,31,32,33,35,36,37,38,39,40,42,44,45,56,58,79,80,81,82,83,84,85,86,87,88,89,90,99,108,114,115,116,119,],[-62,-61,-64,-60,-63,-40,-43,-41,-37,-33,-44,-42,-34,57,-35,-45,-39,-38,71,-36,-58,-59,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,-17,-16,-21,-20,118,121,]),'FALSE':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,76,109,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'INT':([0,2,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,57,58,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,107,108,110,117,118,120,121,122,123,124,],[22,22,-6,-9,-2,-8,22,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,22,-59,22,22,-11,-12,22,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,22,-27,-26,-17,-13,-25,-23,22,-16,22,22,22,22,22,-19,22,-18,]),'RETURNS':([104,111,],[110,117,]),'BOOLEAN':([0,2,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,57,58,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,107,108,110,117,118,120,121,122,123,124,],[23,23,-6,-9,-2,-8,23,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,23,-59,23,23,-11,-12,23,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,23,-27,-26,-17,-13,-25,-23,23,-16,23,23,23,23,23,-19,23,-18,]),'CALL':([0,4,5,6,7,8,10,11,12,14,17,19,20,28,29,30,31,32,33,34,35,36,38,39,40,41,42,45,46,47,50,51,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,108,109,118,120,121,122,123,124,],[24,24,24,24,-6,-9,-2,-8,24,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,24,-42,-34,-35,-45,-39,24,-38,-36,-22,-3,-14,-15,24,24,-58,24,-59,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-11,-12,24,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,24,-27,-26,-17,-13,-25,-23,-16,24,24,24,24,-19,24,-18,]),'NOT':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,109,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'RBRACKET':([7,8,10,11,14,17,19,20,28,29,30,31,32,33,35,36,38,39,40,42,45,46,47,50,51,56,58,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,99,101,102,103,108,120,122,123,124,],[-6,-9,-2,-8,-10,-4,-7,-5,-40,-43,-41,-37,-33,-44,-42,-34,-35,-45,-39,-38,-36,-22,-3,-14,-15,-58,-59,-11,-12,102,-46,-48,-53,-57,-52,-49,-55,-50,-51,-54,-56,-47,103,-27,-26,-17,-13,-25,-23,-16,122,-19,124,-18,]),'OR':([28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,45,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,99,100,108,113,],[-40,-43,-41,-37,-33,-44,-42,-34,-36,-35,-45,-39,-38,70,-36,-36,70,-58,70,70,70,-46,-48,-53,-57,70,-49,-55,-50,-51,-54,-56,-47,-17,70,-16,70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type_info':([0,2,12,57,71,72,78,91,107,110,117,118,120,121,123,],[3,26,3,3,3,94,3,3,94,115,115,3,3,3,3,]),'arguments_list':([74,],[98,]),'unary_op':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,109,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'simple_expression':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,109,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'return_statement':([0,12,57,71,78,91,118,120,121,123,],[7,7,7,7,7,7,7,7,7,7,]),'while_statement':([0,12,57,71,78,91,118,120,121,123,],[8,8,8,8,8,8,8,8,8,8,]),'program':([0,],[9,]),'statement':([0,12,57,71,78,91,118,120,121,123,],[10,47,10,10,47,47,10,47,10,47,]),'parameter_declaration':([72,107,],[93,112,]),'if_statement':([0,12,57,71,78,91,118,120,121,123,],[11,11,11,11,11,11,11,11,11,11,]),'translation_unit':([0,57,71,118,121,],[12,78,91,120,123,]),'for_statement':([0,12,57,71,78,91,118,120,121,123,],[14,14,14,14,14,14,14,14,14,14,]),'assignment':([0,12,57,71,78,91,118,120,121,123,],[17,17,17,17,17,17,17,17,17,17,]),'binary_op':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,109,],[37,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'atom':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,109,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'return_type':([110,117,],[116,119,]),'func_declaration':([0,12,57,71,78,91,118,120,121,123,],[19,19,19,19,19,19,19,19,19,19,]),'func_call':([0,4,5,6,12,34,41,53,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,78,91,109,118,120,121,123,],[20,36,36,36,20,36,36,36,36,20,36,36,36,36,36,36,36,36,36,36,36,36,20,96,36,20,20,36,20,20,20,20,]),'value':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,76,109,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,101,40,]),'params_list':([72,],[95,]),'identifier':([0,3,4,5,6,12,13,24,26,34,41,53,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,74,78,91,94,109,118,120,121,123,],[25,27,42,42,42,25,48,52,54,42,42,42,42,25,42,42,42,42,42,42,42,42,42,42,42,42,25,42,25,25,105,42,25,25,25,25,]),'expression':([4,5,6,34,41,53,55,59,60,61,62,63,64,65,66,67,68,69,70,74,109,],[43,43,46,56,58,75,77,79,80,81,82,83,84,85,86,87,88,89,90,100,113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> translation_unit','program',1,'p_program','parser.py',15),
  ('translation_unit -> statement','translation_unit',1,'p_translation_unit','parser.py',19),
  ('translation_unit -> translation_unit statement','translation_unit',2,'p_translation_unit','parser.py',20),
  ('statement -> assignment','statement',1,'p_statement','parser.py',34),
  ('statement -> func_call','statement',1,'p_statement','parser.py',35),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> func_declaration','statement',1,'p_statement','parser.py',37),
  ('statement -> if_statement','statement',1,'p_statement_block','parser.py',42),
  ('statement -> while_statement','statement',1,'p_statement_block','parser.py',43),
  ('statement -> for_statement','statement',1,'p_statement_block','parser.py',44),
  ('assignment -> identifier EQUALS expression','assignment',3,'p_assignment','parser.py',54),
  ('assignment -> type_info identifier EQUALS expression','assignment',4,'p_decl_assignment','parser.py',59),
  ('assignment -> CONST type_info identifier EQUALS value','assignment',5,'p_decl_assignment','parser.py',60),
  ('assignment -> ID PLUSPLUS','assignment',2,'p_assignment_increment','parser.py',68),
  ('assignment -> ID MINUSMINUS','assignment',2,'p_assignment_decrement','parser.py',72),
  ('func_call -> CALL identifier LPAREN arguments_list RPAREN','func_call',5,'p_func_call','parser.py',80),
  ('func_call -> CALL identifier LPAREN RPAREN','func_call',4,'p_func_call','parser.py',81),
  ('func_declaration -> FUNCTION identifier LPAREN params_list RPAREN COLON RETURNS return_type LBRACKET translation_unit RBRACKET','func_declaration',11,'p_func_declaration','parser.py',91),
  ('func_declaration -> FUNCTION identifier LPAREN RPAREN COLON RETURNS return_type LBRACKET translation_unit RBRACKET','func_declaration',10,'p_func_declaration','parser.py',92),
  ('return_type -> type_info','return_type',1,'p_return_type','parser.py',101),
  ('return_type -> VOID','return_type',1,'p_return_type','parser.py',102),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',106),
  ('if_statement -> IF binary_op LBRACKET translation_unit RBRACKET','if_statement',5,'p_if_statement','parser.py',116),
  ('else_statement -> ELSE LBRACKET translation_unit RBRACKET','else_statement',4,'p_else_statement','parser.py',124),
  ('while_statement -> WHILE binary_op LBRACKET translation_unit RBRACKET','while_statement',5,'p_while_statement','parser.py',127),
  ('for_statement -> FOR ID IN ID','for_statement',4,'p_for_statement','parser.py',131),
  ('for_statement -> FOR ID IN func_call','for_statement',4,'p_for_statement','parser.py',132),
  ('params_list -> parameter_declaration','params_list',1,'p_params_list','parser.py',142),
  ('params_list -> params_list COMMA parameter_declaration','params_list',3,'p_params_list','parser.py',143),
  ('parameter_declaration -> type_info identifier','parameter_declaration',2,'p_parameter_declaration','parser.py',152),
  ('arguments_list -> expression','arguments_list',1,'p_arguments_list','parser.py',156),
  ('arguments_list -> arguments_list COMMA expression','arguments_list',3,'p_arguments_list','parser.py',157),
  ('expression -> simple_expression','expression',1,'p_expression','parser.py',169),
  ('expression -> func_call','expression',1,'p_expression','parser.py',170),
  ('expression -> atom','expression',1,'p_expression','parser.py',171),
  ('simple_expression -> binary_op','simple_expression',1,'p_simple_expression','parser.py',176),
  ('simple_expression -> unary_op','simple_expression',1,'p_simple_expression','parser.py',177),
  ('atom -> identifier','atom',1,'p_atom_expression_','parser.py',183),
  ('atom -> value','atom',1,'p_atom_expression_','parser.py',184),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',189),
  ('value -> NUMBER','value',1,'p_value','parser.py',193),
  ('value -> SLITERAL','value',1,'p_value','parser.py',194),
  ('value -> FLOATNUMBER','value',1,'p_value','parser.py',195),
  ('value -> TRUE','value',1,'p_value','parser.py',196),
  ('value -> FALSE','value',1,'p_value','parser.py',197),
  ('binary_op -> expression AND expression','binary_op',3,'p_binary_op_and','parser.py',203),
  ('binary_op -> expression OR expression','binary_op',3,'p_binary_op_or','parser.py',207),
  ('binary_op -> expression GT expression','binary_op',3,'p_binary_op_gt','parser.py',211),
  ('binary_op -> expression LT expression','binary_op',3,'p_binary_op_lt','parser.py',215),
  ('binary_op -> expression GE expression','binary_op',3,'p_binary_op_ge','parser.py',219),
  ('binary_op -> expression LE expression','binary_op',3,'p_binary_op_le','parser.py',223),
  ('binary_op -> expression ISEQUALS expression','binary_op',3,'p_binary_op_equals','parser.py',227),
  ('binary_op -> expression MODULO expression','binary_op',3,'p_binary_op_mod','parser.py',233),
  ('binary_op -> expression PLUS expression','binary_op',3,'p_binary_op_plus','parser.py',237),
  ('binary_op -> expression MINUS expression','binary_op',3,'p_binary_op_minus','parser.py',241),
  ('binary_op -> expression TIMES expression','binary_op',3,'p_binary_op_times','parser.py',245),
  ('binary_op -> expression DIVIDE expression','binary_op',3,'p_binary_op_divide','parser.py',249),
  ('unary_op -> MINUS expression','unary_op',2,'p_unary_op_minus','parser.py',255),
  ('unary_op -> NOT expression','unary_op',2,'p_unary_op_not','parser.py',263),
  ('type_info -> INT','type_info',1,'p_type_info','parser.py',267),
  ('type_info -> STRING','type_info',1,'p_type_info','parser.py',268),
  ('type_info -> REAL','type_info',1,'p_type_info','parser.py',269),
  ('type_info -> BOOLEAN','type_info',1,'p_type_info','parser.py',270),
  ('type_info -> CHAR','type_info',1,'p_type_info','parser.py',271),
]
