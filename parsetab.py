
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C487F5AAED6B56BCB3D2FC8B271CD045'
    
_lr_action_items = {'REAL':([0,2,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,68,74,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,114,115,117,124,125,127,128,129,130,131,],[1,1,-9,-6,-10,-2,-8,1,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,1,1,1,1,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,1,-53,-57,-56,-59,-49,1,1,-29,-28,-18,-14,-27,-25,-26,1,-17,1,1,1,1,1,-20,1,-19,]),'NOTEQUALS':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,61,61,61,-61,-62,61,61,-48,61,-50,-52,-60,61,-51,-58,-53,-57,-56,-59,-49,-18,61,-17,61,]),'RETURN':([0,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,68,74,75,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,115,125,127,128,129,130,131,],[6,-9,-6,-10,-2,-8,6,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,6,6,6,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,6,-53,-57,-56,-59,-49,6,6,-29,-28,-18,-14,-27,-25,-26,-17,6,6,6,-20,6,-19,]),'FLOATNUMBER':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,80,116,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'VOID':([117,124,],[121,121,]),'ISEQUALS':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,65,65,65,-61,-62,65,65,-48,65,-50,-52,-60,65,-51,-58,-53,-57,-56,-59,-49,-18,65,-17,65,]),'NUMBER':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,80,116,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'CHAR':([0,2,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,68,74,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,114,115,117,124,125,127,128,129,130,131,],[22,22,-9,-6,-10,-2,-8,22,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,22,22,22,22,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,22,-53,-57,-56,-59,-49,22,22,-29,-28,-18,-14,-27,-25,-26,22,-17,22,22,22,22,22,-20,22,-19,]),'WHILE':([0,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,68,74,75,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,115,125,127,128,129,130,131,],[4,-9,-6,-10,-2,-8,4,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,4,4,4,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,4,-53,-57,-56,-59,-49,4,4,-29,-28,-18,-14,-27,-25,-26,-17,4,4,4,-20,4,-19,]),'COLON':([98,113,],[111,118,]),'CONST':([0,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,68,74,75,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,115,125,127,128,129,130,131,],[2,-9,-6,-10,-2,-8,2,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,2,2,2,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,2,-53,-57,-56,-59,-49,2,2,-29,-28,-18,-14,-27,-25,-26,-17,2,2,2,-20,2,-19,]),'TRUE':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,80,116,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'MINUS':([4,5,6,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,55,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,78,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,116,120,],[35,35,35,-42,-45,-43,-39,-35,-46,35,-44,-38,-37,-36,-47,-41,35,-40,67,67,67,35,35,-61,-62,35,35,35,35,35,35,35,35,35,35,35,35,35,35,67,67,67,67,67,67,-60,67,67,-58,67,-57,-56,-59,67,-18,67,-17,35,67,]),'DIVIDE':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,64,64,64,-61,-62,64,64,64,64,64,64,-60,64,64,64,64,64,-56,-59,64,-18,64,-17,64,]),'LE':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,69,69,69,-61,-62,69,69,69,69,-50,-52,-60,69,-51,-58,-53,-57,-56,-59,69,-18,69,-17,69,]),'RPAREN':([29,30,31,32,33,34,36,37,38,39,40,41,43,58,59,76,78,82,83,84,85,86,87,88,89,91,92,93,94,95,99,101,104,105,106,112,115,119,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-61,-62,98,105,-48,-55,-50,-52,-60,-54,-51,-58,-53,-57,-56,-59,-49,-30,113,115,-18,-33,-32,-17,-31,-34,]),'LT':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,66,66,66,-61,-62,66,66,66,66,-50,-52,-60,66,-51,-58,-53,-57,-56,-59,66,-18,66,-17,66,]),'PLUS':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,70,70,70,-61,-62,70,70,70,70,70,70,-60,70,70,-58,70,-57,-56,-59,70,-18,70,-17,70,]),'SLITERAL':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,80,116,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'COMMA':([29,30,31,32,33,34,36,37,38,39,40,41,43,58,59,82,83,84,85,86,87,88,89,91,92,93,94,95,99,101,104,105,106,112,115,119,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-61,-62,-48,-55,-50,-52,-60,-54,-51,-58,-53,-57,-56,-59,-49,-30,114,116,-18,-33,-32,-17,-31,-34,]),'$end':([7,8,9,10,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,102,103,105,107,108,109,110,115,129,131,],[-9,-6,-10,0,-2,-8,-1,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,-53,-57,-56,-59,-49,-29,-28,-18,-14,-27,-25,-26,-17,-20,-19,]),'FUNCTION':([0,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,68,74,75,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,115,125,127,128,129,130,131,],[14,-9,-6,-10,-2,-8,14,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,14,14,14,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,14,-53,-57,-56,-59,-49,14,14,-29,-28,-18,-14,-27,-25,-26,-17,14,14,14,-20,14,-19,]),'GT':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,62,62,62,-61,-62,62,62,62,62,-50,-52,-60,62,-51,-58,-53,-57,-56,-59,62,-18,62,-17,62,]),'MODULO':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,71,71,71,-61,-62,71,71,71,71,71,71,-60,71,71,71,71,71,-56,-59,71,-18,71,-17,71,]),'STRING':([0,2,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,68,74,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,114,115,117,124,125,127,128,129,130,131,],[16,16,-9,-6,-10,-2,-8,16,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,16,16,16,16,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,16,-53,-57,-56,-59,-49,16,16,-29,-28,-18,-14,-27,-25,-26,16,-17,16,16,16,16,16,-20,16,-19,]),'FOR':([0,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,68,74,75,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,115,125,127,128,129,130,131,],[17,-9,-6,-10,-2,-8,17,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,17,17,17,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,17,-53,-57,-56,-59,-49,17,17,-29,-28,-18,-14,-27,-25,-26,-17,17,17,17,-20,17,-19,]),'PLUSPLUS':([19,],[52,]),'EQUALS':([19,26,28,29,56,],[-42,55,57,-42,80,]),'ELSE':([12,109,],[47,-25,]),'GE':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,63,63,63,-61,-62,63,63,63,63,-50,-52,-60,63,-51,-58,-53,-57,-56,-59,63,-18,63,-17,63,]),'LPAREN':([29,50,54,],[-42,76,78,]),'IN':([51,],[77,]),'MINUSMINUS':([19,],[53,]),'TIMES':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,72,72,72,-61,-62,72,72,72,72,72,72,-60,72,72,72,72,72,-56,-59,72,-18,72,-17,72,]),'ID':([0,1,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,48,49,52,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,105,107,108,109,110,115,116,125,127,128,129,130,131,],[19,-65,29,29,29,29,-9,-6,-10,-2,-8,19,29,-11,-64,51,-4,-7,-5,-67,-63,-66,29,29,-42,-45,-43,-39,-35,-46,29,-44,-38,-37,-36,-47,-41,29,-40,-23,-24,-3,-15,-16,29,29,-61,-62,29,29,29,29,29,29,29,29,19,29,29,29,29,29,19,19,103,29,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,19,-53,-57,-56,-59,-49,19,19,29,-29,-28,-18,-14,-27,-25,-26,-17,29,19,19,19,-20,19,-19,]),'IF':([0,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,68,74,75,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,115,125,127,128,129,130,131,],[5,-9,-6,-10,-2,-8,5,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,5,5,5,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,5,-53,-57,-56,-59,-49,5,5,-29,-28,-18,-14,-27,-25,-26,-17,5,5,5,-20,5,-19,]),'AND':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,60,60,60,-61,-62,60,60,-48,60,-50,-52,-60,60,-51,-58,-53,-57,-56,-59,60,-18,60,-17,60,]),'LBRACKET':([1,16,22,23,24,29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,47,58,59,82,83,84,85,86,87,88,89,91,92,93,94,95,105,115,121,122,123,126,],[-65,-64,-67,-63,-66,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,68,74,75,-61,-62,-48,-55,-50,-52,-60,-54,-51,-58,-53,-57,-56,-59,-49,-18,-17,-22,-21,125,128,]),'FALSE':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,80,116,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'INT':([0,2,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,68,74,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,114,115,117,124,125,127,128,129,130,131,],[23,23,-9,-6,-10,-2,-8,23,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,23,23,23,23,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,23,-53,-57,-56,-59,-49,23,23,-29,-28,-18,-14,-27,-25,-26,23,-17,23,23,23,23,23,-20,23,-19,]),'RETURNS':([111,118,],[117,124,]),'BOOLEAN':([0,2,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,68,74,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,114,115,117,124,125,127,128,129,130,131,],[24,24,-9,-6,-10,-2,-8,24,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,24,24,24,24,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,24,-53,-57,-56,-59,-49,24,24,-29,-28,-18,-14,-27,-25,-26,24,-17,24,24,24,24,24,-20,24,-19,]),'CALL':([0,4,5,6,7,8,9,11,12,13,15,18,20,21,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,48,49,52,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,115,116,125,127,128,129,130,131,],[25,25,25,25,-9,-6,-10,-2,-8,25,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,25,-44,-38,-37,-36,-47,-41,25,-40,-23,-24,-3,-15,-16,25,25,-61,-62,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,25,-53,-57,-56,-59,-49,25,25,-29,-28,-18,-14,-27,-25,-26,-17,25,25,25,25,-20,25,-19,]),'NOT':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,116,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'RBRACKET':([7,8,9,11,12,15,18,20,21,29,30,31,32,33,34,36,37,38,39,40,41,43,46,48,49,52,53,58,59,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,105,107,108,109,110,115,127,129,130,131,],[-9,-6,-10,-2,-8,-11,-4,-7,-5,-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,-23,-24,-3,-15,-16,-61,-62,-12,-13,-48,-55,-50,-52,-60,-54,-51,-58,108,-53,-57,-56,-59,-49,109,110,-29,-28,-18,-14,-27,-25,-26,-17,129,-20,131,-19,]),'OR':([29,30,31,32,33,34,36,37,38,39,40,41,43,44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,105,106,115,120,],[-42,-45,-43,-39,-35,-46,-44,-38,-37,-36,-47,-41,-40,73,73,73,-61,-62,73,73,-48,73,-50,-52,-60,73,-51,-58,-53,-57,-56,-59,-49,-18,73,-17,73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type_info':([0,2,13,68,74,75,76,90,96,97,114,117,124,125,127,128,130,],[3,27,3,3,3,3,100,3,3,3,100,122,122,3,3,3,3,]),'arguments_list':([78,],[104,]),'unary_op':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,116,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'simple_expression':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,116,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'func_declaration':([0,13,68,74,75,90,96,97,125,127,128,130,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'if_else_statement':([0,13,68,74,75,90,96,97,125,127,128,130,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'return_statement':([0,13,68,74,75,90,96,97,125,127,128,130,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'while_statement':([0,13,68,74,75,90,96,97,125,127,128,130,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'program':([0,],[10,]),'statement':([0,13,68,74,75,90,96,97,125,127,128,130,],[11,49,11,11,11,49,49,49,11,49,11,49,]),'parameter_declaration':([76,114,],[99,119,]),'if_statement':([0,13,68,74,75,90,96,97,125,127,128,130,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'translation_unit':([0,68,74,75,125,128,],[13,90,96,97,127,130,]),'for_statement':([0,13,68,74,75,90,96,97,125,127,128,130,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'assignment':([0,13,68,74,75,90,96,97,125,127,128,130,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'binary_op':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,116,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'atom':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,116,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'return_type':([117,124,],[123,126,]),'else_statement':([12,],[48,]),'func_call':([0,4,5,6,13,35,42,55,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,90,96,97,116,125,127,128,130,],[21,39,39,39,21,39,39,39,39,39,39,39,39,39,39,39,39,21,39,39,39,39,39,21,21,102,39,21,21,21,39,21,21,21,21,]),'value':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,80,116,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,107,41,]),'params_list':([76,],[101,]),'identifier':([0,3,4,5,6,13,14,25,27,35,42,55,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,90,96,97,100,116,125,127,128,130,],[26,28,43,43,43,26,50,54,56,43,43,43,43,43,43,43,43,43,43,43,43,26,43,43,43,43,43,26,26,43,26,26,26,112,43,26,26,26,26,]),'expression':([4,5,6,35,42,55,57,60,61,62,63,64,65,66,67,69,70,71,72,73,78,116,],[44,45,46,58,59,79,81,82,83,84,85,86,87,88,89,91,92,93,94,95,106,120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> translation_unit','program',1,'p_program','parser.py',17),
  ('translation_unit -> statement','translation_unit',1,'p_translation_unit','parser.py',21),
  ('translation_unit -> translation_unit statement','translation_unit',2,'p_translation_unit','parser.py',22),
  ('statement -> assignment','statement',1,'p_statement','parser.py',36),
  ('statement -> func_call','statement',1,'p_statement','parser.py',37),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',38),
  ('statement -> func_declaration','statement',1,'p_statement','parser.py',39),
  ('statement -> if_statement','statement',1,'p_statement_block','parser.py',44),
  ('statement -> if_else_statement','statement',1,'p_statement_block','parser.py',45),
  ('statement -> while_statement','statement',1,'p_statement_block','parser.py',46),
  ('statement -> for_statement','statement',1,'p_statement_block','parser.py',47),
  ('assignment -> identifier EQUALS expression','assignment',3,'p_assignment','parser.py',57),
  ('assignment -> type_info identifier EQUALS expression','assignment',4,'p_decl_assignment','parser.py',62),
  ('assignment -> CONST type_info identifier EQUALS value','assignment',5,'p_decl_assignment','parser.py',63),
  ('assignment -> ID PLUSPLUS','assignment',2,'p_assignment_increment','parser.py',71),
  ('assignment -> ID MINUSMINUS','assignment',2,'p_assignment_decrement','parser.py',75),
  ('func_call -> CALL identifier LPAREN arguments_list RPAREN','func_call',5,'p_func_call','parser.py',83),
  ('func_call -> CALL identifier LPAREN RPAREN','func_call',4,'p_func_call','parser.py',84),
  ('func_declaration -> FUNCTION identifier LPAREN params_list RPAREN COLON RETURNS return_type LBRACKET translation_unit RBRACKET','func_declaration',11,'p_func_declaration','parser.py',94),
  ('func_declaration -> FUNCTION identifier LPAREN RPAREN COLON RETURNS return_type LBRACKET translation_unit RBRACKET','func_declaration',10,'p_func_declaration','parser.py',95),
  ('return_type -> type_info','return_type',1,'p_return_type','parser.py',104),
  ('return_type -> VOID','return_type',1,'p_return_type','parser.py',105),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',109),
  ('if_else_statement -> if_statement else_statement','if_else_statement',2,'p_if_else_statement','parser.py',119),
  ('if_statement -> IF expression LBRACKET translation_unit RBRACKET','if_statement',5,'p_if_statement','parser.py',123),
  ('else_statement -> ELSE LBRACKET translation_unit RBRACKET','else_statement',4,'p_else_statement','parser.py',127),
  ('while_statement -> WHILE expression LBRACKET translation_unit RBRACKET','while_statement',5,'p_while_statement','parser.py',131),
  ('for_statement -> FOR ID IN ID','for_statement',4,'p_for_statement','parser.py',135),
  ('for_statement -> FOR ID IN func_call','for_statement',4,'p_for_statement','parser.py',136),
  ('params_list -> parameter_declaration','params_list',1,'p_params_list','parser.py',146),
  ('params_list -> params_list COMMA parameter_declaration','params_list',3,'p_params_list','parser.py',147),
  ('parameter_declaration -> type_info identifier','parameter_declaration',2,'p_parameter_declaration','parser.py',156),
  ('arguments_list -> expression','arguments_list',1,'p_arguments_list','parser.py',160),
  ('arguments_list -> arguments_list COMMA expression','arguments_list',3,'p_arguments_list','parser.py',161),
  ('expression -> simple_expression','expression',1,'p_expression','parser.py',173),
  ('expression -> func_call','expression',1,'p_expression','parser.py',174),
  ('expression -> atom','expression',1,'p_expression','parser.py',175),
  ('simple_expression -> binary_op','simple_expression',1,'p_simple_expression','parser.py',180),
  ('simple_expression -> unary_op','simple_expression',1,'p_simple_expression','parser.py',181),
  ('atom -> identifier','atom',1,'p_atom_expression_','parser.py',187),
  ('atom -> value','atom',1,'p_atom_expression_','parser.py',188),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',193),
  ('value -> NUMBER','value',1,'p_value','parser.py',197),
  ('value -> SLITERAL','value',1,'p_value','parser.py',198),
  ('value -> FLOATNUMBER','value',1,'p_value','parser.py',199),
  ('value -> TRUE','value',1,'p_value','parser.py',200),
  ('value -> FALSE','value',1,'p_value','parser.py',201),
  ('binary_op -> expression AND expression','binary_op',3,'p_binary_op_and','parser.py',207),
  ('binary_op -> expression OR expression','binary_op',3,'p_binary_op_or','parser.py',211),
  ('binary_op -> expression GT expression','binary_op',3,'p_binary_op_gt','parser.py',215),
  ('binary_op -> expression LT expression','binary_op',3,'p_binary_op_lt','parser.py',219),
  ('binary_op -> expression GE expression','binary_op',3,'p_binary_op_ge','parser.py',223),
  ('binary_op -> expression LE expression','binary_op',3,'p_binary_op_le','parser.py',227),
  ('binary_op -> expression ISEQUALS expression','binary_op',3,'p_binary_op_equals','parser.py',231),
  ('binary_op -> expression NOTEQUALS expression','binary_op',3,'p_binary_op_notequals','parser.py',235),
  ('binary_op -> expression MODULO expression','binary_op',3,'p_binary_op_mod','parser.py',241),
  ('binary_op -> expression PLUS expression','binary_op',3,'p_binary_op_plus','parser.py',245),
  ('binary_op -> expression MINUS expression','binary_op',3,'p_binary_op_minus','parser.py',249),
  ('binary_op -> expression TIMES expression','binary_op',3,'p_binary_op_times','parser.py',253),
  ('binary_op -> expression DIVIDE expression','binary_op',3,'p_binary_op_divide','parser.py',257),
  ('unary_op -> MINUS expression','unary_op',2,'p_unary_op_minus','parser.py',263),
  ('unary_op -> NOT expression','unary_op',2,'p_unary_op_not','parser.py',271),
  ('type_info -> INT','type_info',1,'p_type_info','parser.py',275),
  ('type_info -> STRING','type_info',1,'p_type_info','parser.py',276),
  ('type_info -> REAL','type_info',1,'p_type_info','parser.py',277),
  ('type_info -> BOOLEAN','type_info',1,'p_type_info','parser.py',278),
  ('type_info -> CHAR','type_info',1,'p_type_info','parser.py',279),
]
